{"version":3,"sources":["pages/Home/Home.module.css","components/Input/Input.module.css","pages/History/History.module.css","components/Deal/Deal.module.css","components/Quote/Quote.module.css","components/Dropdown/Dropdown.module.css","pages/Converter/Converter.module.css","pages/Login/Login.module.css","pages/App.module.css","components/Button/Button.module.css","serviceWorker.ts","overmind/auth/state.ts","overmind/router/types.ts","overmind/router/state.ts","overmind/router/onInitialize.ts","overmind/router/operators.ts","overmind/auth/operators.ts","overmind/api/types.ts","overmind/api/operators.ts","structures/Graph.ts","overmind/quotes/actions.ts","overmind/quotes/operators.ts","utils/dateToNumber.ts","overmind/history/operators.ts","overmind/history/actions.ts","overmind/router/actions.ts","overmind/router/effects.ts","overmind/auth/actions.ts","overmind/login/operators.ts","overmind/login/errors.ts","overmind/login/state.ts","utils/validationRules.ts","overmind/login/actions.ts","overmind/api/effects.ts","overmind/storage/effects.ts","overmind/storage/onInitialize.ts","overmind/quotes/state.ts","overmind/history/state.ts","overmind/index.ts","hooks/useClickOutsideRef.ts","components/Quote/index.tsx","hooks/useHover.ts","components/Input/index.tsx","pages/Quotes/index.tsx","components/Button/index.tsx","components/Dropdown/index.tsx","overmind/quotes/types.ts","pages/Converter/index.tsx","utils/formatDate.ts","components/Deal/index.tsx","overmind/login/types.ts","pages/History/index.tsx","pages/Home/index.tsx","pages/Login/index.tsx","pages/App.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","logInState","Page","HOME","LOGIN","state","currentPage","appIsReady","onInitialize","a","actions","effects","storage","getFromIdb","undefined","auth","Number","router","initialize","showHomePage","showLoginPage","setPage","page","mutate","openPage","run","open","setLogInState","newLogInState","saveToIdb","toString","responseResult","request","LOG_OUT","operation","checkRequestStatus","paths","fork","_","response","result","Graph","nodes","mappedQuotes","edges","edgeWeights","quotes","data","forEach","asset","quote","startDate","split","u","v","addNode","addEdge","addQuote","op","MULTIPLY","encodeEdge","DIVIDE","this","quoteOp","node","indexOf","push","adjacent","weight","setEdgeWeight","filter","_v","Object","keys","removeEdge","source","destination","d","p","q","Infinity","Error","initializeSingleSource","initializePriorityQueue","minNode","min","extractMin","w","getEdgeWeight","relax","length","dijkstra","nodeList","reverse","path","shortestPath","operations","i","getQuote","amount","getOperations","console","log","reduce","reducer","String","Math","round","load","pipe","map","api","getQuotes","OK","graph","init","assets","ERROR","noop","manageFavs","index","favs","splice","changeAmount","changeDropdown","value","dd","otherDD","options","convertAssets","calculate","firstDropdown","secondDropdown","dateToNumber","date","replace","loadHistory","getHistory","resp","deals","sort","firstBy","b","finishDate","thenBy","profit","existInPages","negativeDeals","goodDeals","pages","deal","history","changeInputValue","inputValue","changePage","LOG_IN","parallel","loadQuotes","o","IN_PROGRESS","routes","url","params","start","show","logIn","loginForm","email","error","password","formError","when","isEmailValid","isPasswordValid","lfo","true","false","logOut","isEmail","test","setField","payload","fieldType","requestUrl","login","ky","post","json","action","store","Store","key","set","get","overmind","JSON","parse","addMutationListener","mutation","setTimeout","stringify","getNodes","config","namespaced","useOvermind","createHook","useClickOutsideRef","initialIsVisible","useState","isComponentVisible","setIsComponentVisible","ref","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","Quote","props","initialState","hovered","changeHovered","onMouseEnter","onMouseLeave","useHover","className","styles","section","button","onClick","onFavChange","isFav","text","withoutBorder","divider","defaultProps","sizes","Quotes","mappedList","getMappedQuotes","favoriteList","otherList","item","nanoid","sizesClasses","M","inputM","L","inputL","XL","inputXL","Input","children","size","otherProps","label","labelValue","input","inputError","type","types","Dropdown","optionsNotEmpty","main","arrow","option","onChange","classes","DEFAULT","TRANSPARENT","transparent","Button","componentType","dropdown","Converter","isResultNotEmpty","e","FIRST","SECOND","output","description","formatDate","datetime","time","isMobile","any","month","day","substring","Deal","startQuote","finishQuote","History","controls","reversedIcon","controlInput","max","onFocus","onKeyDown","headers","tabs","HomePage","tab","setTab","wide","navigation","navButton","active","header","headerMargined","h","hMargined","hAlone","hTable","content","overlay","table","LoginPage","container","form","onSubmit","preventDefault","placeholder","Home","Login","App","Route","app","createOvermind","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6aa6c5ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Home_main__1MzX9\",\"wide\":\"Home_wide__2_yC1\",\"header\":\"Home_header__NgRHF\",\"headerMargined\":\"Home_headerMargined__1PeUW\",\"h\":\"Home_h__1Fka5\",\"hMargined\":\"Home_hMargined__1HuEO\",\"hAlone\":\"Home_hAlone__2gFJK\",\"navigation\":\"Home_navigation__1_5Dz\",\"navButton\":\"Home_navButton__1JpGB\",\"active\":\"Home_active__15wIS\",\"content\":\"Home_content__JgF4o\",\"overlay\":\"Home_overlay__RbSk-\",\"table\":\"Home_table__3doK7\",\"hTable\":\"Home_hTable__kcQAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__37keV\",\"labelValue\":\"Input_labelValue__3TZKY\",\"input\":\"Input_input__vL7w8\",\"inputM\":\"Input_inputM__yo7cb\",\"inputL\":\"Input_inputL__b8Rxz\",\"inputXL\":\"Input_inputXL__1R0v7\",\"inputError\":\"Input_inputError__3T2nH\",\"error\":\"Input_error__dV8-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"History_main__2eELm\",\"controls\":\"History_controls__1PqQx\",\"controlInput\":\"History_controlInput__1wtCz\",\"input\":\"History_input__OZtgJ\",\"button\":\"History_button__2Ko0r\",\"reversedIcon\":\"History_reversedIcon__2d01I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Deal_main__lEytz\",\"text\":\"Deal_text__3yoNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Quote_section__3fh_1\",\"divider\":\"Quote_divider__KLG0I\",\"text\":\"Quote_text__3iLnS\",\"button\":\"Quote_button__1h59S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Dropdown_main__2CRc-\",\"input\":\"Dropdown_input__3GCK0\",\"arrow\":\"Dropdown_arrow__3wAVV\",\"options\":\"Dropdown_options__2x-g7\",\"option\":\"Dropdown_option__1RwnG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Converter_main__3RZzs\",\"input\":\"Converter_input__32XME\",\"output\":\"Converter_output__2Zu4a\",\"description\":\"Converter_description__2AX_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2Ix5K\",\"header\":\"Login_header__2_-Fv\",\"form\":\"Login_form__xot2y\",\"formError\":\"Login_formError__3Xjdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1NWoy\",\"header\":\"App_header__2ZQNI\",\"button\":\"App_button__1i7yB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1UZlZ\",\"transparent\":\"Button_transparent__1rXwA\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export enum logInState {\r\n  LOG_IN,\r\n  LOG_OUT,\r\n  IN_PROGRESS\r\n}\r\n\r\nexport type State = {\r\n  logInState: logInState;\r\n};\r\n\r\nexport const state: State = {\r\n  logInState: logInState.LOG_OUT\r\n};\r\n","export type Page = {\r\n  HOME: string;\r\n  LOGIN: string;\r\n};\r\n\r\nconst basePath =\r\n  process.env.NODE_ENV === 'production' ? '/' : '/';\r\n\r\nexport const Page: Page = {\r\n  HOME: basePath,\r\n  LOGIN: `${basePath}login`\r\n};\r\n","import { Page } from './types';\r\n\r\ntype State = {\r\n  currentPage: string;\r\n  appIsReady: boolean;\r\n};\r\n\r\nexport const state: State = {\r\n  currentPage: Page.HOME,\r\n  appIsReady: false\r\n};\r\n","import { OnInitialize } from 'overmind';\r\nimport { Page } from './types';\r\n\r\nconst onInitialize: OnInitialize = async ({ state, actions, effects }) => {\r\n  // restore logInState - important for routing\r\n  const logInState = await effects.storage.getFromIdb('logInState');\r\n  if (logInState !== undefined) state.auth.logInState = Number(logInState);\r\n\r\n  effects.router.initialize({\r\n    [Page.HOME]: actions.router.showHomePage,\r\n    [Page.LOGIN]: actions.router.showLoginPage\r\n    // '/users/:id', actions.showUserModal\r\n  });\r\n};\r\n\r\nexport default onInitialize;\r\n","import { mutate, Operator, run } from 'overmind';\r\n\r\nexport const setPage: <T>(page: string) => Operator<T> = page =>\r\n  mutate(function setPage({ state }) {\r\n    state.router.currentPage = page;\r\n    if (!state.router.appIsReady) state.router.appIsReady = true;\r\n  });\r\n\r\nexport const openPage: <T>(page: string) => Operator<T> = page =>\r\n  run(function openPage({ effects }) {\r\n    effects.router.open(page);\r\n  });\r\n","import { fork, Operator, mutate } from 'overmind';\r\nimport { logInState } from './state';\r\nimport { response } from '../api/types';\r\n\r\nexport const forkUserIsLoggedIn: (paths: {\r\n  [key: string]: Operator<void>;\r\n}) => Operator<void> = paths =>\r\n  fork(function forkUserIsLoggedIn({ state }) {\r\n    return state.auth.logInState;\r\n  }, paths);\r\n\r\nexport const setLogInState: (\r\n  newLogInState: logInState\r\n) => Operator<void | response> = newLogInState =>\r\n  mutate(async function setLogInState({ state, effects }) {\r\n    state.auth.logInState = newLogInState;\r\n    await effects.storage.saveToIdb(\r\n      'logInState',\r\n      Number(newLogInState).toString()\r\n    );\r\n  });\r\n","export type quote = {\r\n  asset: string;\r\n  startDate: Date;\r\n  quote: string;\r\n};\r\n\r\nexport type deal = {\r\n  asset: string;\r\n  startDate: string;\r\n  startQuote: string;\r\n  finishDate: string;\r\n  finishQuote: string;\r\n  profit: string;\r\n};\r\n\r\nexport type requestOptions = {\r\n  action: request;\r\n  login?: string;\r\n  password?: string;\r\n};\r\n\r\nexport enum responseResult {\r\n  OK = 'ok',\r\n  ERROR = 'error'\r\n}\r\n\r\nexport type response = {\r\n  result: responseResult;\r\n  error?: string;\r\n  assets?: Array<quote>;\r\n  deals?: Array<deal>;\r\n};\r\n\r\nexport enum request {\r\n  login = 'login',\r\n  quote = 'quote',\r\n  history = 'history'\r\n}\r\n","import { Operator, fork, map } from 'overmind';\r\nimport { response } from './types';\r\n\r\nexport const sendLogInRequest: () => Operator<void, response> = () =>\r\n  map(async function sendLogInRequest({ state, effects }) {\r\n    const { email, password } = state.loginForm;\r\n    const response: response = await effects.api.logIn(\r\n      email.value,\r\n      password.value\r\n    );\r\n    return response;\r\n  });\r\n\r\nexport const sendQuoteRequest: () => Operator<void, response> = () =>\r\n  map(async function sendQuoteRequest({ effects }) {\r\n    const response: response = await effects.api.getQuotes();\r\n    return response;\r\n  });\r\n\r\nexport const sendHistoryRequest: () => Operator<void, response> = () =>\r\n  map(async function sendHistoryRequest({ effects }) {\r\n    const response: response = await effects.api.getHistory();\r\n    return response;\r\n  });\r\n\r\nexport const checkRequestStatus: (paths: {\r\n  [key: string]: Operator<response>;\r\n}) => Operator<response> = paths =>\r\n  fork(function checkRequestStatus(_, response: response) {\r\n    return response.result;\r\n  }, paths);\r\n","import { quote } from '../overmind/api/types';\r\n\r\nenum operation {\r\n  MULTIPLY,\r\n  DIVIDE\r\n}\r\n\r\ntype quoteOperation = {\r\n  quote: string;\r\n  op: operation;\r\n  asset: string;\r\n};\r\n\r\nclass Graph {\r\n  private nodes: string[] = [];\r\n  private mappedQuotes: { [key: string]: quote } = {};\r\n  private edges: { [key: string]: string[] } = {};\r\n  private edgeWeights: { [key: string]: number } = {};\r\n  private quotes: { [key: string]: quoteOperation } = {};\r\n\r\n  init(data: quote[]) {\r\n    data.forEach(({ asset, quote, startDate }) => {\r\n      const [u, v] = asset.split('/');\r\n      this.mappedQuotes[asset] = { asset, quote, startDate };\r\n      this.addNode(u);\r\n      this.addNode(v);\r\n      this.addEdge(u, v);\r\n      this.addEdge(v, u);\r\n      this.addQuote(u, v, {\r\n        quote,\r\n        op: operation.MULTIPLY,\r\n        asset: this.encodeEdge(u, v)\r\n      });\r\n      this.addQuote(v, u, {\r\n        quote,\r\n        op: operation.DIVIDE,\r\n        asset: this.encodeEdge(v, u)\r\n      });\r\n    });\r\n    return this;\r\n  }\r\n\r\n  addQuote(u: string, v: string, quoteOp: quoteOperation) {\r\n    this.quotes[this.encodeEdge(u, v)] = quoteOp;\r\n  }\r\n\r\n  getQuote(u: string, v: string) {\r\n    return this.quotes[this.encodeEdge(u, v)];\r\n  }\r\n\r\n  addNode(node: string) {\r\n    if (this.nodes.indexOf(node) === -1) this.nodes.push(node);\r\n    this.edges[node] = this.adjacent(node);\r\n  }\r\n\r\n  adjacent(node: string | null) {\r\n    return node && this.edges[node] ? this.edges[node] : [];\r\n  }\r\n\r\n  encodeEdge(u: string, v: string) {\r\n    return u + '|' + v;\r\n  }\r\n\r\n  setEdgeWeight(u: string, v: string, weight: number) {\r\n    this.edgeWeights[this.encodeEdge(u, v)] = weight;\r\n  }\r\n\r\n  getEdgeWeight(u: string, v: string) {\r\n    const weight = this.edgeWeights[this.encodeEdge(u, v)];\r\n    return weight === undefined ? 1 : weight;\r\n  }\r\n\r\n  addEdge(u: string, v: string, weight = 1) {\r\n    this.adjacent(u).push(v);\r\n\r\n    if (weight !== undefined) {\r\n      this.setEdgeWeight(u, v, weight);\r\n    }\r\n  }\r\n\r\n  removeEdge(u: string, v: string) {\r\n    if (this.edges[u]) {\r\n      this.edges[u] = this.adjacent(u).filter(_v => _v !== v);\r\n    }\r\n  }\r\n\r\n  removeNode(node: string) {\r\n    // Remove incoming edges.\r\n    Object.keys(this.edges).forEach(u => {\r\n      this.edges[u].forEach(v => {\r\n        if (v === node) {\r\n          this.removeEdge(u, v);\r\n        }\r\n      });\r\n    });\r\n\r\n    // Remove outgoing edges (and signal that the node no longer exists).\r\n    delete this.edges[node];\r\n    this.nodes = this.nodes.filter(u => u === node);\r\n  }\r\n\r\n  getNodes() {\r\n    return this.nodes;\r\n  }\r\n\r\n  getMappedQuotes() {\r\n    return this.mappedQuotes;\r\n  }\r\n\r\n  shortestPath(source: string, destination: string) {\r\n    // Upper bounds for shortest path weights from source.\r\n    const d: { [key: string]: number } = {};\r\n\r\n    // Predecessors.\r\n    const p: { [key: string]: string } = {};\r\n\r\n    // Poor man's priority queue, keyed on d.\r\n    let q: { [key: string]: boolean } = {};\r\n\r\n    const initializeSingleSource = () => {\r\n      for (const node of this.nodes) {\r\n        d[node] = Infinity;\r\n      }\r\n      if (d[source] !== Infinity) {\r\n        throw new Error('Source node is not in the graph');\r\n      }\r\n      if (d[destination] !== Infinity) {\r\n        throw new Error('Destination node is not in the graph');\r\n      }\r\n      d[source] = 0;\r\n    };\r\n\r\n    // Adds entries in q for all nodes.\r\n    const initializePriorityQueue = () => {\r\n      for (const node of this.nodes) {\r\n        q[node] = true;\r\n      }\r\n    };\r\n\r\n    // Returns true if q is empty.\r\n    const priorityQueueEmpty = () => {\r\n      return Object.keys(q).length === 0;\r\n    };\r\n\r\n    // Linear search to extract (find and remove) min from q.\r\n    const extractMin = () => {\r\n      let min = Infinity;\r\n      let minNode: string | undefined;\r\n      Object.keys(q).forEach(function(node) {\r\n        if (d[node] < min) {\r\n          min = d[node];\r\n          minNode = node;\r\n        }\r\n      });\r\n      if (minNode === undefined) {\r\n        // If we reach here, there's a disconnected subgraph, and we're done.\r\n        q = {};\r\n        return '';\r\n      }\r\n      delete q[minNode];\r\n      return minNode;\r\n    };\r\n\r\n    const relax = (u: string, v: string) => {\r\n      const w = this.getEdgeWeight(u, v);\r\n      if (d[v] > d[u] + w) {\r\n        d[v] = d[u] + w;\r\n        p[v] = u;\r\n      }\r\n    };\r\n\r\n    const dijkstra = () => {\r\n      initializeSingleSource();\r\n      initializePriorityQueue();\r\n      while (!priorityQueueEmpty()) {\r\n        const u = extractMin();\r\n        this.adjacent(u).forEach(v => {\r\n          relax(u, v);\r\n        });\r\n      }\r\n    };\r\n\r\n    // Assembles the shortest path by traversing the\r\n    // predecessor subgraph from destination to source.\r\n    const path = () => {\r\n      const nodeList = [];\r\n      // let weight = 0;\r\n      let node = destination;\r\n      while (p[node]) {\r\n        nodeList.push(node);\r\n        // weight += this.getEdgeWeight(p[node], node);\r\n        node = p[node];\r\n      }\r\n      if (node !== source) {\r\n        throw new Error('No path found');\r\n      }\r\n      nodeList.push(node);\r\n      nodeList.reverse();\r\n      // nodeList.weight = weight;\r\n      return nodeList;\r\n    };\r\n\r\n    dijkstra();\r\n\r\n    return path();\r\n  }\r\n\r\n  getOperations(u: string, v: string) {\r\n    const path = this.shortestPath(u, v);\r\n    const operations = [];\r\n    for (let i = 0; i <= path.length; i++) {\r\n      const quote = this.getQuote(path[i], path[i + 1]);\r\n      if (quote) operations.push(quote);\r\n    }\r\n    return operations;\r\n  }\r\n\r\n  calculate(amount: number, u: string, v: string) {\r\n    const operations = this.getOperations(u, v);\r\n    console.log('operations', operations);\r\n    const result = operations.reduce((reducer, { quote, op }) => {\r\n      if (op === operation.MULTIPLY) reducer *= Number(quote);\r\n      if (op === operation.DIVIDE) reducer /= Number(quote);\r\n      return reducer;\r\n    }, amount);\r\n    return String(Math.round(result * 100) / 100);\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import { Operator, pipe, noop, Action, mutate } from 'overmind';\r\nimport { responseResult } from '../api/types';\r\nimport { sendQuoteRequest, checkRequestStatus } from '../api/operators';\r\nimport * as o from './operators';\r\nimport { dropdown } from './types';\r\n\r\nexport const load: Operator = pipe(\r\n  sendQuoteRequest(),\r\n  checkRequestStatus({\r\n    [responseResult.OK]: o.createQuotesGraph(),\r\n    [responseResult.ERROR]: noop()\r\n  })\r\n);\r\n\r\nexport const manageFavs: Action<string> = ({ state }, quote) => {\r\n  const index = state.quotes.favs.indexOf(quote);\r\n  if (index === -1) {\r\n    state.quotes.favs.push(quote);\r\n  } else {\r\n    state.quotes.favs.splice(index, 1);\r\n  }\r\n};\r\n\r\nexport const changeAmount: Action<number> = ({ state }, amount) => {\r\n  state.quotes.amount = amount;\r\n};\r\n\r\nexport const changeDropdown: Action<{\r\n  value: string;\r\n  dd: dropdown;\r\n  otherDD: dropdown;\r\n}> = ({ state }, { value, dd, otherDD }) => {\r\n  state.quotes[dd] = value;\r\n  state.quotes.result = '';\r\n  if (state.quotes[dd] === state.quotes[otherDD])\r\n    state.quotes[otherDD] = state.quotes.options[otherDD][0];\r\n};\r\n\r\nexport const convertAssets: Operator = mutate(function convertAssets({\r\n  state\r\n}) {\r\n  state.quotes.result = state.quotes.graph.calculate(\r\n    state.quotes.amount,\r\n    state.quotes.firstDropdown,\r\n    state.quotes.secondDropdown\r\n  );\r\n});\r\n","import { Operator, mutate } from 'overmind';\r\nimport { response } from '../api/types';\r\nimport Graph from '../../structures/Graph';\r\n\r\nexport const createQuotesGraph: () => Operator<response> = () =>\r\n  mutate(function createQuotesGraph({ state }, response: response) {\r\n    state.quotes.graph = new Graph().init(response.assets || []);\r\n  });\r\n","export function dateToNumber(date: string): number {\r\n  return Number(date.replace(/[\\s-:]/g, ''));\r\n}\r\n","import { Operator, map, mutate } from 'overmind';\r\nimport { response, deal } from '../api/types';\r\nimport { firstBy } from 'thenby';\r\nimport { dateToNumber } from '../../utils/dateToNumber';\r\n\r\nexport const sortHistory: () => Operator<response, deal[]> = () =>\r\n  map(function sortHistory(_, resp: response) {\r\n    return resp.deals\r\n      ? resp.deals.sort(\r\n          firstBy(\r\n            (a, b) => dateToNumber(b.finishDate) - dateToNumber(a.finishDate)\r\n          ).thenBy((a, b) => b.profit - a.profit)\r\n        )\r\n      : [];\r\n  });\r\n\r\nexport const chooseDeals: () => Operator<deal[], Array<deal[]>> = () =>\r\n  map(function chooseDeals(_, deals) {\r\n    const maxPages = 2;\r\n    const maxNegativeDeals = 2;\r\n    const maxSameAssets = 2;\r\n    const minGoodDeals = 1;\r\n    const existInPages: Array<{ [key: string]: number }> = [{}];\r\n    const negativeDeals: Array<number> = [0];\r\n    const goodDeals: Array<number> = [0];\r\n    const pages: Array<deal[]> = [[]];\r\n    let page = 0;\r\n    for (const deal of deals) {\r\n      // create new page\r\n      if (pages[page].length === 10) {\r\n        page += 1;\r\n        if (page === maxPages) {\r\n          break;\r\n        }\r\n        existInPages.push({});\r\n        pages.push([]);\r\n        negativeDeals.push(0);\r\n        goodDeals.push(0);\r\n      }\r\n      // move to next iteration if we have max quantity of same assets\r\n      if (\r\n        existInPages[page][deal.asset] &&\r\n        existInPages[page][deal.asset] === maxSameAssets\r\n      ) {\r\n        continue;\r\n      }\r\n      // move to next iteration if we have max quantity of negative deals\r\n      if (deal.profit.indexOf('-') !== -1) {\r\n        if (negativeDeals[page] === maxNegativeDeals) {\r\n          continue;\r\n        }\r\n        negativeDeals[page] += 1;\r\n      } else {\r\n        // more than 100\r\n        if (deal.profit.indexOf('.') === 3) {\r\n          goodDeals[page] += 1;\r\n        }\r\n      }\r\n      // if last item on page and we dont have positive deals, move next\r\n      if (pages[page].length === 9 && goodDeals[page] < minGoodDeals) {\r\n        continue;\r\n      }\r\n\r\n      pages[page].push(deal);\r\n      if (existInPages[page][deal.asset]) {\r\n        existInPages[page][deal.asset] += 1;\r\n      } else {\r\n        existInPages[page][deal.asset] = 1;\r\n      }\r\n    }\r\n    return pages;\r\n  });\r\n\r\nexport const saveDeals: () => Operator<Array<deal[]>> = () =>\r\n  mutate(function saveDeals({ state }, pages) {\r\n    state.history.pages = pages;\r\n  });\r\n","import { Operator, pipe, noop, Action } from 'overmind';\r\nimport { sendHistoryRequest, checkRequestStatus } from '../api/operators';\r\nimport { responseResult } from '../api/types';\r\nimport * as o from './operators';\r\n\r\nexport const loadHistory: Operator = pipe(\r\n  sendHistoryRequest(),\r\n  checkRequestStatus({\r\n    [responseResult.OK]: pipe(o.sortHistory(), o.chooseDeals(), o.saveDeals()),\r\n    [responseResult.ERROR]: noop()\r\n  })\r\n);\r\n\r\nexport const changeInputValue: Action<number> = ({ state }, value) => {\r\n  state.history.inputValue = value;\r\n};\r\n\r\nexport const changePage: Action<number> = ({ state }, page) => {\r\n  if (page < 0) {\r\n    state.history.page = 0;\r\n    state.history.inputValue = 1;\r\n    return;\r\n  }\r\n  if (page > state.history.pages.length - 1) {\r\n    state.history.page = state.history.pages.length - 1;\r\n    state.history.inputValue = state.history.pages.length;\r\n    return;\r\n  }\r\n  state.history.page = page;\r\n  state.history.inputValue = page + 1;\r\n};\r\n","import { Operator, noop, pipe, parallel } from 'overmind';\r\nimport * as o from './operators';\r\nimport { forkUserIsLoggedIn } from '../auth/operators';\r\nimport { Page } from './types';\r\nimport { logInState } from '../auth/state';\r\nimport { load as loadQuotes } from '../quotes/actions';\r\nimport { loadHistory } from '../history/actions';\r\n\r\nexport const showHomePage: Operator = pipe(\r\n  forkUserIsLoggedIn({\r\n    [logInState.LOG_IN]: pipe(\r\n      parallel(loadQuotes, loadHistory),\r\n      o.setPage(Page.HOME)\r\n    ),\r\n    [logInState.LOG_OUT]: o.openPage(Page.LOGIN),\r\n    [logInState.IN_PROGRESS]: noop()\r\n  })\r\n);\r\n\r\nexport const showLoginPage: Operator = o.setPage(Page.LOGIN);\r\n","import page from 'page';\r\n\r\ntype IParams = {\r\n  [param: string]: string;\r\n} | void;\r\n\r\nexport function initialize(routes: {\r\n  [url: string]: (params: IParams) => void;\r\n}) {\r\n  Object.keys(routes).forEach(url => {\r\n    page(url, ({ params }) => routes[url](params));\r\n  });\r\n  page.start();\r\n}\r\nexport const open = (url: string) => page.show(url);\r\n","import { Operator, pipe } from 'overmind';\r\nimport { setLogInState } from './operators';\r\nimport { logInState } from './state';\r\nimport * as lfo from '../login/operators';\r\nimport { sendLogInRequest, checkRequestStatus } from '../api/operators';\r\nimport { responseResult } from '../api/types';\r\nimport { openPage } from '../router/operators';\r\nimport { Page } from '../router/types';\r\n\r\nexport const logIn: Operator = pipe(\r\n  lfo.clearErrors(),\r\n  lfo.isFormValid({\r\n    true: pipe(\r\n      setLogInState(logInState.IN_PROGRESS),\r\n      sendLogInRequest(),\r\n      checkRequestStatus({\r\n        [responseResult.OK]: pipe(\r\n          setLogInState(logInState.LOG_IN),\r\n          openPage(Page.HOME)\r\n        ),\r\n        [responseResult.ERROR]: lfo.showFormError()\r\n      })\r\n    ),\r\n    false: lfo.showFieldErrors()\r\n  })\r\n);\r\n\r\nexport const logOut: Operator = pipe(\r\n  setLogInState(logInState.LOG_OUT),\r\n  openPage(Page.LOGIN)\r\n);\r\n","import { Operator, when, mutate } from 'overmind';\r\nimport { emailErrorMessage, passwordErrorMessage } from './errors';\r\nimport { response } from '../api/types';\r\n\r\nexport const isFormValid: (paths: {\r\n  true: Operator;\r\n  false: Operator;\r\n}) => Operator = paths =>\r\n  when(function isFormValid({ state }) {\r\n    return state.loginForm.isEmailValid && state.loginForm.isPasswordValid;\r\n  }, paths);\r\n\r\nexport const showFieldErrors: () => Operator = () =>\r\n  mutate(function showFieldErrors({ state }) {\r\n    if (!state.loginForm.isEmailValid)\r\n      state.loginForm.email.error = emailErrorMessage;\r\n    if (!state.loginForm.isPasswordValid)\r\n      state.loginForm.password.error = passwordErrorMessage;\r\n  });\r\n\r\nexport const showFormError: () => Operator<response> = () =>\r\n  mutate(function showFormError({ state }, response: response) {\r\n    state.loginForm.formError = response.error;\r\n  });\r\n\r\nexport const clearErrors: () => Operator = () =>\r\n  mutate(function clearErrors({ state }) {\r\n    state.loginForm.email.error = null;\r\n    state.loginForm.password.error = null;\r\n    state.loginForm.formError = null;\r\n  });\r\n","export const emailErrorMessage = 'Неверный логин';\r\nexport const passwordErrorMessage = 'Неверный пароль';\r\n","import isEmail from 'validator/lib/isEmail';\r\nimport { isPasswordValid } from '../../utils/validationRules';\r\nimport { Derive } from 'overmind';\r\n\r\ntype Field = {\r\n  value: string;\r\n  error: null | string;\r\n};\r\n\r\ntype State = {\r\n  email: Field;\r\n  password: Field;\r\n  isEmailValid: Derive<State, boolean>;\r\n  isPasswordValid: Derive<State, boolean>;\r\n  formError: null | undefined | string;\r\n};\r\n\r\nexport const state: State = {\r\n  email: {\r\n    value: '',\r\n    error: null\r\n  },\r\n  password: {\r\n    value: '',\r\n    error: null\r\n  },\r\n  isEmailValid: state => isEmail(state.email.value),\r\n  isPasswordValid: state => isPasswordValid(state.password.value),\r\n  formError: null\r\n};\r\n","export const isPasswordValid = (value: string) =>\r\n  value.length >= 7 && /^[a-zA-Z0-9_]+$/.test(value);\r\n","import { Action } from 'overmind';\r\nimport { fieldType } from './types';\r\n\r\nexport const setField: Action<{ fieldType: fieldType; value: string }> = (\r\n  { state },\r\n  payload\r\n) => {\r\n  state.loginForm[payload.fieldType].value = payload.value;\r\n};\r\n","import ky from 'ky';\r\nimport { request, response } from './types';\r\n\r\nconst requestUrl =\r\n  process.env.NODE_ENV === 'production' ? '/api.php' : '/api.php';\r\n\r\nexport async function logIn(\r\n  login: string,\r\n  password: string\r\n): Promise<response> {\r\n  return ky\r\n    .post(requestUrl, {\r\n      json: { action: request.login, login, password }\r\n    })\r\n    .json();\r\n}\r\n\r\nexport async function getQuotes(): Promise<response> {\r\n  return ky.post(requestUrl, { json: { action: request.quote } }).json();\r\n}\r\n\r\nexport async function getHistory(): Promise<response> {\r\n  return ky.post(requestUrl, { json: { action: request.history } }).json();\r\n}\r\n","import { Store, set, get } from 'idb-keyval';\r\n\r\nconst store = new Store('bk-app-db', 'bk-app');\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport async function saveToIdb(key: string, value: any): Promise<void> {\r\n  return set(key, value, store);\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport async function getFromIdb(key: string): Promise<any> {\r\n  return get(key, store);\r\n}\r\n","import { OnInitialize } from 'overmind';\r\n\r\nconst onInitialize: OnInitialize = async ({ state, effects }, overmind) => {\r\n  // restore state\r\n  const favs = await effects.storage.getFromIdb('favs');\r\n  if (favs !== undefined) {\r\n    state.quotes.favs = JSON.parse(favs);\r\n  }\r\n\r\n  // sync to store\r\n  overmind.addMutationListener(mutation => {\r\n    if (mutation.path.indexOf('favs') !== -1) {\r\n      setTimeout(() => {\r\n        effects.storage.saveToIdb('favs', JSON.stringify(state.quotes.favs));\r\n      }, 100);\r\n    }\r\n  });\r\n};\r\n\r\nexport default onInitialize;\r\n","import { Derive } from 'overmind';\r\nimport Graph from '../../structures/Graph';\r\n\r\ntype State = {\r\n  favs: Array<string>;\r\n  amount: number;\r\n  firstDropdown: string;\r\n  secondDropdown: string;\r\n  graph: Graph;\r\n  options: Derive<State, { firstDropdown: string[]; secondDropdown: string[] }>;\r\n  result: string;\r\n};\r\n\r\nexport const state: State = {\r\n  favs: [],\r\n  amount: 0,\r\n  firstDropdown: 'EUR',\r\n  secondDropdown: 'USD',\r\n  graph: new Graph(),\r\n  options: state => ({\r\n    firstDropdown: state.graph\r\n      .getNodes()\r\n      .filter(asset => asset !== state.firstDropdown),\r\n    secondDropdown: state.graph\r\n      .getNodes()\r\n      .filter(asset => asset !== state.secondDropdown)\r\n  }),\r\n  result: ''\r\n};\r\n","import { deal } from '../api/types';\r\n\r\ntype State = {\r\n  inputValue: number;\r\n  page: number;\r\n  deals: Array<deal>;\r\n  pages: Array<deal[]>;\r\n};\r\n\r\nexport const state: State = {\r\n  page: 0,\r\n  inputValue: 1,\r\n  deals: [],\r\n  pages: [[]]\r\n};\r\n","import { namespaced } from 'overmind/config';\r\nimport { IConfig } from 'overmind';\r\nimport { createHook } from 'overmind-react';\r\nimport * as router from './router';\r\nimport * as auth from './auth';\r\nimport * as loginForm from './login';\r\nimport * as api from './api';\r\nimport * as storage from './storage';\r\nimport * as quotes from './quotes';\r\nimport * as history from './history';\r\n\r\nexport const config = namespaced({\r\n  quotes,\r\n  storage,\r\n  auth,\r\n  router,\r\n  loginForm,\r\n  history,\r\n  api\r\n});\r\n\r\ndeclare module 'overmind' {\r\n  interface Config extends IConfig<typeof config> {}\r\n}\r\n\r\nexport const useOvermind = createHook<typeof config>();\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nexport function useClickOutsideRef(initialIsVisible: boolean) {\r\n  const [isComponentVisible, setIsComponentVisible] = useState(\r\n    initialIsVisible\r\n  );\r\n  const ref = useRef<any>(null);\r\n\r\n  const handleClickOutside = (event: MouseEvent) => {\r\n    if (ref.current && !ref.current.contains(event.target as Node)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  });\r\n\r\n  return { ref, isComponentVisible, setIsComponentVisible };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\nimport styles from './Quote.module.css';\r\nimport { useHover } from '../../hooks';\r\n\r\ntype Props = {\r\n  isFav?: boolean;\r\n  onFavChange: (key: string) => void;\r\n  quote: string;\r\n  asset: string;\r\n  startDate: Date;\r\n  withoutBorder?: boolean;\r\n};\r\n\r\nconst Quote: FunctionComponent<Props> = (props: Props) => {\r\n  const [hovered, onMouseEnter, onMouseLeave] = useHover(false);\r\n  return (\r\n    <li className={styles.section}>\r\n      <button\r\n        className={styles.button}\r\n        {...{ onMouseEnter, onMouseLeave }}\r\n        onClick={() => props.onFavChange(props.asset)}>\r\n        <i\r\n          className={\r\n            props.isFav || hovered ? 'icon-star-full' : 'icon-star-empty'\r\n          }\r\n        />\r\n      </button>\r\n      <span className={styles.text}>{props.asset}</span>\r\n      <span className={styles.text}>{props.quote}</span>\r\n      <span className={styles.text}>{props.startDate}</span>\r\n      {!props.withoutBorder && <figure className={styles.divider} />}\r\n    </li>\r\n  );\r\n};\r\n\r\nQuote.defaultProps = {\r\n  withoutBorder: false\r\n};\r\n\r\nexport default Quote;\r\n","import { useState } from 'react';\r\n\r\nexport const useHover: (\r\n  initalState: boolean\r\n) => [boolean, () => void, () => void] = (initialState = false) => {\r\n  const [hovered, changeHovered] = useState(initialState);\r\n  function onMouseEnter() {\r\n    changeHovered(true);\r\n  }\r\n  function onMouseLeave() {\r\n    changeHovered(false);\r\n  }\r\n  return [hovered, onMouseEnter, onMouseLeave];\r\n};\r\n","import React, { FunctionComponent, ReactNode } from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nexport enum sizes {\r\n  M = 'M',\r\n  L = 'L',\r\n  XL = 'XL'\r\n}\r\n\r\nconst sizesClasses = {\r\n  [sizes.M]: styles.inputM,\r\n  [sizes.L]: styles.inputL,\r\n  [sizes.XL]: styles.inputXL\r\n};\r\n\r\ntype Props = {\r\n  size: sizes;\r\n  placeholder?: any;\r\n  type?: string;\r\n  error?: null | string;\r\n  children: ReactNode;\r\n  value: string | number;\r\n  onChange: (event: { target: { value: string } }) => void;\r\n};\r\n\r\nconst Input: FunctionComponent<Props> = (props: Props) => {\r\n  const { children, error, size, ...otherProps } = props;\r\n  return (\r\n    <label className={styles.label}>\r\n      <span className={styles.labelValue}>{children}</span>\r\n      <input\r\n        className={`\r\n          ${styles.input}\r\n          ${sizesClasses[size]}\r\n          ${error ? styles.inputError : ''}\r\n        `}\r\n        {...otherProps}\r\n      />\r\n      {Boolean(error) && <span className={styles.error}>{error}</span>}\r\n    </label>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  error: null,\r\n  type: 'text'\r\n};\r\n\r\nexport default Input;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Quote from '../../components/Quote';\r\nimport { useOvermind } from '../../overmind';\r\nimport nanoid from 'nanoid';\r\nimport { quote } from '../../overmind/api/types';\r\n\r\nconst Quotes: FunctionComponent = () => {\r\n  const {\r\n    actions,\r\n    state: {\r\n      quotes: { graph, favs }\r\n    }\r\n  } = useOvermind();\r\n  const mappedList = graph.getMappedQuotes();\r\n  const favoriteList: Array<quote> = [],\r\n    otherList: Array<quote> = [];\r\n  for (const item in mappedList) {\r\n    if (favs.indexOf(item) !== -1) {\r\n      favoriteList.push(mappedList[item]);\r\n    } else {\r\n      otherList.push(mappedList[item]);\r\n    }\r\n  }\r\n  return (\r\n    <ul>\r\n      {favoriteList.map((item: quote) => (\r\n        <Quote\r\n          key={nanoid()}\r\n          {...item}\r\n          isFav={true}\r\n          onFavChange={actions.quotes.manageFavs}\r\n        />\r\n      ))}\r\n      {otherList.map((item: quote, index) => (\r\n        <Quote\r\n          key={nanoid()}\r\n          {...item}\r\n          withoutBorder={index === otherList.length - 1}\r\n          onFavChange={actions.quotes.manageFavs}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import React, { FunctionComponent, ReactNode } from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nexport enum types {\r\n  DEFAULT = '',\r\n  TRANSPARENT = 'tr'\r\n}\r\n\r\nconst classes = {\r\n  [types.DEFAULT]: '',\r\n  [types.TRANSPARENT]: styles.transparent\r\n};\r\n\r\ntype Props = {\r\n  componentType?: types;\r\n  children: ReactNode;\r\n  onClick: () => void | Promise<void>;\r\n};\r\n\r\nconst Button: FunctionComponent<Props> = (props: Props) => {\r\n  const { children, componentType, ...otherProps } = props;\r\n  return (\r\n    <button\r\n      className={`${styles.button} ${\r\n        componentType ? classes[componentType] : ''\r\n      }`}\r\n      {...otherProps}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  componentType: types.DEFAULT\r\n};\r\n\r\nexport default Button;\r\n","import React, { FunctionComponent } from 'react';\r\nimport styles from './Dropdown.module.css';\r\nimport nanoid from 'nanoid';\r\nimport { useClickOutsideRef } from '../../hooks';\r\n\r\ntype Props = {\r\n  value: string;\r\n  options: Array<string>;\r\n  onChange: (value: string) => void;\r\n};\r\n\r\nconst Dropdown: FunctionComponent<Props> = (props: Props) => {\r\n  const { ref, isComponentVisible, setIsComponentVisible } = useClickOutsideRef(\r\n    false\r\n  );\r\n  const optionsNotEmpty = props.options.length > 0;\r\n  return (\r\n    <div ref={ref} className={styles.main}>\r\n      <div\r\n        onClick={() => {\r\n          setIsComponentVisible(!isComponentVisible);\r\n        }}\r\n        className={styles.input}>\r\n        <span>{props.value}</span>\r\n        {optionsNotEmpty && <span className={styles.arrow} />}\r\n      </div>\r\n      {isComponentVisible && optionsNotEmpty && (\r\n        <ul className={styles.options}>\r\n          {props.options.map(option => (\r\n            <li\r\n              className={styles.option}\r\n              key={nanoid()}\r\n              onClick={() => {\r\n                props.onChange(option);\r\n                setIsComponentVisible(false);\r\n              }}>\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","export enum dropdown {\r\n  FIRST = 'firstDropdown',\r\n  SECOND = 'secondDropdown'\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\nimport styles from './Converter.module.css';\r\nimport Input, { sizes } from '../../components/Input';\r\nimport Dropdown from '../../components/Dropdown';\r\nimport Button from '../../components/Button';\r\nimport { useOvermind } from '../../overmind';\r\nimport { dropdown } from '../../overmind/quotes/types';\r\n\r\nconst Converter: FunctionComponent = () => {\r\n  const {\r\n    state: {\r\n      quotes: { amount, firstDropdown, secondDropdown, options, result }\r\n    },\r\n    actions: {\r\n      quotes: { changeAmount, changeDropdown, convertAssets }\r\n    }\r\n  } = useOvermind();\r\n  const isResultNotEmpty = Boolean(result.length);\r\n  return (\r\n    <section className={styles.main}>\r\n      <section className={styles.input}>\r\n        <div className=\"flexBox\">\r\n          <Input\r\n            type=\"number\"\r\n            size={sizes.M}\r\n            value={amount}\r\n            onChange={e => changeAmount(Number(e.target.value))}>\r\n            Сумма\r\n          </Input>\r\n        </div>\r\n        <div className=\"flexBox\">\r\n          <Dropdown\r\n            key=\"first-dropdown\"\r\n            value={firstDropdown}\r\n            options={options.firstDropdown}\r\n            onChange={value =>\r\n              changeDropdown({\r\n                value,\r\n                dd: dropdown.FIRST,\r\n                otherDD: dropdown.SECOND\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"flexBox\">\r\n          <Dropdown\r\n            key=\"second-dropdown\"\r\n            value={secondDropdown}\r\n            options={options.secondDropdown}\r\n            onChange={value =>\r\n              changeDropdown({\r\n                value,\r\n                dd: dropdown.SECOND,\r\n                otherDD: dropdown.FIRST\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"flexBox\">\r\n          <Button onClick={convertAssets}>Рассчитать</Button>\r\n        </div>\r\n      </section>\r\n      <section className={styles.output}>\r\n        {isResultNotEmpty && <span className={styles.description}>Итого</span>}\r\n        {isResultNotEmpty && <h1>{result}</h1>}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import isMobile from 'ismobilejs';\r\n\r\nexport function formatDate(datetime: string): string {\r\n  const [date, time] = datetime.split(' ');\r\n  if (isMobile().any) {\r\n    const [_, month, day] = date.split('-');\r\n    return `${time.substring(0, 5)} ${day}.${month}`;\r\n  }\r\n  return `${time.substring(0, 5)} ${date.replace(/-/g, '.')}`;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\nimport styles from './Deal.module.css';\r\nimport { formatDate } from '../../utils/formatDate';\r\n\r\ntype Props = {\r\n  asset: string;\r\n  startQuote: string;\r\n  startDate: string;\r\n  finishQuote: string;\r\n  finishDate: string;\r\n  profit: string;\r\n};\r\n\r\nconst Deal: FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    asset,\r\n    startQuote,\r\n    startDate,\r\n    finishQuote,\r\n    finishDate,\r\n    profit\r\n  } = props;\r\n  return (\r\n    <li className={styles.main}>\r\n      <span className={`flexBox ${styles.text}`}>{asset}</span>\r\n      <span className={`flexBox ${styles.text}`}>{formatDate(startDate)}</span>\r\n      <span className={`flexBox ${styles.text}`}>{startQuote}</span>\r\n      <span className={`flexBox ${styles.text}`}>{formatDate(finishDate)}</span>\r\n      <span className={`flexBox ${styles.text}`}>{finishQuote}</span>\r\n      <span className={`flexBox ${styles.text}`}>{profit}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Deal;\r\n","export enum fieldType {\r\n  email = 'email',\r\n  password = 'password'\r\n}\r\n","import React, { FunctionComponent, useEffect } from 'react';\r\nimport { useOvermind } from '../../overmind';\r\nimport styles from './History.module.css';\r\nimport Deal from '../../components/Deal';\r\nimport nanoid from 'nanoid';\r\nimport { useClickOutsideRef } from '../../hooks';\r\n\r\nconst History: FunctionComponent = () => {\r\n  const {\r\n    state: {\r\n      history: { pages, page, inputValue }\r\n    },\r\n    actions: {\r\n      history: { changePage, changeInputValue }\r\n    }\r\n  } = useOvermind();\r\n  const { ref, setIsComponentVisible } = useClickOutsideRef(false);\r\n  useEffect(() => {\r\n    changePage(inputValue - 1);\r\n  });\r\n  return (\r\n    <section className={styles.main}>\r\n      <ul>\r\n        {pages[page].map(deal => (\r\n          <Deal key={nanoid()} {...deal} />\r\n        ))}\r\n      </ul>\r\n      <div className={styles.controls}>\r\n        <button\r\n          className={`${styles.button} ${styles.reversedIcon}`}\r\n          onClick={() => changePage(page - 1)}>\r\n          <i className=\"icon-right-arrow\" />\r\n        </button>\r\n        <div className={styles.controlInput}>\r\n          <input\r\n            ref={ref}\r\n            type=\"number\"\r\n            value={inputValue}\r\n            min=\"1\"\r\n            max={pages.length}\r\n            className={styles.input}\r\n            onFocus={() => setIsComponentVisible(true)}\r\n            onChange={e => changeInputValue(Number(e.target.value))}\r\n            onKeyDown={e => e.key === 'Enter' && changePage(inputValue - 1)}\r\n          />\r\n          <span>&nbsp; / &nbsp;{pages.length}</span>\r\n        </div>\r\n        <button className={styles.button} onClick={() => changePage(page + 1)}>\r\n          <i className=\"icon-right-arrow\" />\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport styles from './Home.module.css';\r\nimport Quotes from '../Quotes';\r\nimport Converter from '../Converter';\r\nimport History from '../History';\r\nimport nanoid from 'nanoid';\r\n\r\nconst headers = [\r\n  ['Валютная пара', 'Котировка', 'Дата получения'],\r\n  ['Конвертация валют'],\r\n  ['Актив', 'Начало', 'Котировка', 'Конец', 'Котировка', 'Прибыль']\r\n];\r\n\r\nconst tabs = [\r\n  <Quotes key=\"quotes\" />,\r\n  <Converter key=\"converter\" />,\r\n  <History key=\"history\" />\r\n];\r\n\r\nconst HomePage: FunctionComponent = () => {\r\n  const [tab, setTab] = useState(0);\r\n  const buttons = [\r\n    { text: 'Курсы валют' },\r\n    { text: 'Конвертор' },\r\n    { text: 'История' }\r\n  ];\r\n  return (\r\n    <main className={`${styles.main} ${tab === 2 ? styles.wide : ''}`}>\r\n      <nav className={styles.navigation}>\r\n        {buttons.map(({ text }, i) => (\r\n          <button\r\n            key={nanoid()}\r\n            onClick={() => setTab(i)}\r\n            className={\r\n              i === tab\r\n                ? `${styles.navButton} ${styles.active}`\r\n                : styles.navButton\r\n            }>\r\n            {text}\r\n          </button>\r\n        ))}\r\n      </nav>\r\n      <header\r\n        className={`${styles.header} ${\r\n          tab === 0 ? styles.headerMargined : ''\r\n        }`}>\r\n        {headers[tab].map(h => (\r\n          <span\r\n            key={nanoid()}\r\n            className={`\r\n            ${styles.h} \r\n            ${tab === 0 ? styles.hMargined : ''} \r\n            ${tab === 1 ? styles.hAlone : ''} \r\n            ${tab === 2 ? styles.hTable : ''}`}>\r\n            {h}\r\n          </span>\r\n        ))}\r\n      </header>\r\n      <div\r\n        className={`\r\n        ${styles.content} \r\n        ${tab === 0 ? styles.overlay : ''}\r\n        ${tab === 2 ? styles.table : ''}\r\n      `}>\r\n        {tabs[tab]}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { FunctionComponent } from 'react';\r\nimport styles from './Login.module.css';\r\nimport Input, { sizes } from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport { useOvermind } from '../../overmind';\r\nimport { fieldType } from '../../overmind/login/types';\r\n\r\nconst LoginPage: FunctionComponent = () => {\r\n  const {\r\n    state: {\r\n      loginForm: { email, password, formError }\r\n    },\r\n    actions: {\r\n      loginForm: { setField },\r\n      auth: { logIn }\r\n    }\r\n  } = useOvermind();\r\n  return (\r\n    <main className={styles.container}>\r\n      <header className={styles.header}>Вход в личный кабинет</header>\r\n      <form className={styles.form} onSubmit={e => e.preventDefault()}>\r\n        <Input\r\n          placeholder=\"user@mail.ru\"\r\n          size={sizes.XL}\r\n          type=\"email\"\r\n          value={email.value}\r\n          error={email.error}\r\n          onChange={e =>\r\n            setField({ fieldType: fieldType.email, value: e.target.value })\r\n          }>\r\n          Логин\r\n        </Input>\r\n        <Input\r\n          placeholder=\"*********\"\r\n          size={sizes.XL}\r\n          type=\"password\"\r\n          value={password.value}\r\n          error={password.error}\r\n          onChange={e =>\r\n            setField({ fieldType: fieldType.password, value: e.target.value })\r\n          }>\r\n          Пароль\r\n        </Input>\r\n        <Button onClick={() => logIn()}>\r\n          Вход\r\n          <i className=\"icon-right-arrow icon-arrow\" />\r\n        </Button>\r\n        {Boolean(formError) && (\r\n          <span className={styles.formError}>{formError}</span>\r\n        )}\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport styles from './App.module.css';\r\nimport { useOvermind } from '../overmind';\r\nimport { Page } from '../overmind/router/types';\r\nimport HomePage from './Home';\r\nimport LoginPage from './Login';\r\nimport Button, { types } from '../components/Button';\r\nimport { logInState } from '../overmind/auth/state';\r\n\r\nconst routes = {\r\n  [Page.HOME.toString()]: <HomePage />,\r\n  [Page.LOGIN.toString()]: <LoginPage />\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  const { state, actions } = useOvermind();\r\n  const Route = routes[state.router.currentPage];\r\n  return (\r\n    <div className={styles.app}>\r\n      <h1 className={styles.header}>TEST SPA app</h1>\r\n      <div className={styles.button}>\r\n        {state.auth.logInState === logInState.LOG_IN && (\r\n          <Button\r\n            componentType={types.TRANSPARENT}\r\n            onClick={() => actions.auth.logOut()}>\r\n            Выход\r\n          </Button>\r\n        )}\r\n      </div>\r\n      {state.router.appIsReady && Route}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './assets/style.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './pages/App';\r\nimport { Provider } from 'overmind-react';\r\nimport { createOvermind } from 'overmind';\r\nimport { config } from './overmind';\r\n\r\nconst overmind = createOvermind(config);\r\n\r\nReactDOM.render(\r\n  <Provider value={overmind}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}